version: "3.9"

services:
  dynamodb:
    image: amazon/dynamodb-local:2.5.2
    command: -jar DynamoDBLocal.jar -inMemory -sharedDb -port 8000
    ports:
      - "8000:8000"
    environment:
      - AWS_REGION=us-east-1
    healthcheck:
      test: ["CMD", "sh", "-c", "apk add --no-cache curl >/dev/null 2>&1 || true; curl -s http://localhost:8000/shell/ >/dev/null"]
      interval: 3s
      timeout: 2s
      retries: 20

  localstack:
    image: localstack/localstack:3.7
    environment:
      - SERVICES=s3
      - AWS_DEFAULT_REGION=us-east-1
      - LS_LOG=warn
      - DEBUG=0
    ports:
      - "4566:4566" # edge
    healthcheck:
      test: ["CMD", "bash", "-c", "awslocal --version >/dev/null 2>&1 || (pip install -q awscli-local && echo ok) && awslocal s3 ls >/dev/null 2>&1"]
      interval: 5s
      timeout: 3s
      retries: 20

  init:
    image: amazon/aws-cli:2.17.59
    depends_on:
      dynamodb:
        condition: service_healthy
      localstack:
        condition: service_healthy
    environment:
      AWS_REGION: us-east-1
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
      # Customize bucket/table names via env if desired
      DDB_TABLE_NAME: mastra-single-table
      S3_BUCKET_NAME: mastra-local-knowledge
    entrypoint: ["/bin/sh", "-c"]
    command: >-
      '
      set -e
      echo "Creating DynamoDB table: ${DDB_TABLE_NAME}"
      aws dynamodb create-table \
        --endpoint-url http://dynamodb:8000 \
        --table-name ${DDB_TABLE_NAME} \
        --attribute-definitions AttributeName=pk,AttributeType=S AttributeName=sk,AttributeType=S \
        --key-schema AttributeName=pk,KeyType=HASH AttributeName=sk,KeyType=RANGE \
        --billing-mode PAY_PER_REQUEST \
        >/dev/null 2>&1 || echo "Table may already exist"

      # Create required GSIs expected by @mastra/dynamodb (matches TABLE_SETUP)
      set +e
      aws dynamodb update-table \
        --endpoint-url http://dynamodb:8000 \
        --table-name ${DDB_TABLE_NAME} \
        --attribute-definitions \
          AttributeName=GSI1PK,AttributeType=S \
          AttributeName=GSI1SK,AttributeType=S \
          AttributeName=GSI2PK,AttributeType=S \
          AttributeName=GSI2SK,AttributeType=S \
        --global-secondary-index-updates \
          '[
            {"Create":{"IndexName":"GSI1","KeySchema":[{"AttributeName":"GSI1PK","KeyType":"HASH"},{"AttributeName":"GSI1SK","KeyType":"RANGE"}],"Projection":{"ProjectionType":"ALL"},"ProvisionedThroughput":{"ReadCapacityUnits":1,"WriteCapacityUnits":1}}},
            {"Create":{"IndexName":"GSI2","KeySchema":[{"AttributeName":"GSI2PK","KeyType":"HASH"},{"AttributeName":"GSI2SK","KeyType":"RANGE"}],"Projection":{"ProjectionType":"ALL"},"ProvisionedThroughput":{"ReadCapacityUnits":1,"WriteCapacityUnits":1}}}
          ]' \
        >/dev/null 2>&1 || echo "GSIs may already exist or not required for your usage"
      set -e

      echo "Creating S3 bucket: ${S3_BUCKET_NAME} on LocalStack"
      aws --endpoint-url http://localstack:4566 s3 mb s3://${S3_BUCKET_NAME} \
        >/dev/null 2>&1 || echo "Bucket may already exist"

      echo "Init complete"
      '

networks:
  default:
    name: mastra-local

